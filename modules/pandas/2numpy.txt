numpy 简介
	高性能科学计算和数据分析的基础包,是所有高级数据分析攻击的构建基础
	面向数组的思维模式;

import matplotlib
import numpy as np
from numpy.random.randn
        form numpy.random.randn
form numpy.random.randn
form numpy.random.randn
from numpy.random.randn
from numpy.random.rand
from numpy.random.randn
from numpandom.randn
from numpy.random import randn
        data={i:randn(i) for in range(6)}
data={i:randn(i) for in range(6)}
data={i:randn(i) for i in range(6)}
d
data
data={i:randn{i} for i in range(6)}
data={i:randn() for i in range(6)}
data
np.random.rand
np.random.randn?
pwd
cd ..
ls
pwd
!echo "print('hello pandas')"
!echo "print('hello pandas')" >hello.py
cd
cd workspaces/
ls
mkdir ipython
cd ipython/
ls
!echo "print('hello pandas')" >hello.py
%run hello.py
more hello.py
a=np.random.randn(100,100)
a
%timeit a.dot(a)
%quickref
%magic
import numpy as np
data = np.array([1,3,4,8])
data
data.shape
data.dtype
data[1]
data[1] = 9
data
data = np.array([[1,2,3],[4,5,6]])
data
data.shap
data.shape
data[0,0]
np.arange(10)
range(10)
np.arange(4,15)
np.arange(5,15)
data =np.arange(10)
data
data.reshape(2,5)
data =np.arange(10)
data
data.reshape(2,)
data.reshape(2)
data.reshape(2,5)
data =np.arange(10)
data2 = data.reshape(2,5)
data2
data
data[5]=0
data
data2
np.zeros(2,2)
np.zeros((2,2))
np.zeros?
np.ones((3,3))
np.ones((2,3,3))
np.eye(4)
np.arange(16),reshap(4,4)
np.arange(16).reshap(4,4)
np.arange(16).reshape(4,4)
data = np.arange(100,step=10)
data
data[2:5]
data[:3]
data[:3:1]
data[:3:2]
data[5:] = -1
data
data = np.arange(16).reshape(4,4)
data
data[1]
data[0]
data[1:3]
data[:,2:4]
data[1:3,2:4]
data
data[[1,3],[2,3]]
print data[1,2],data[3,3]
data > 10
idx = data > 10
data[idx]
data[data >  10]
idx
data[data %2 ==0)
data[data %2 ==0]
x = np.arange(1,5),reshap(2,2)
x = np.arange(1,5),reshape(2,2)
x = np.arange(1,5).reshape(2,2)
x
y = np.arange(5,9).reshape(2,2)
y
x+y
np.add(x,y)
x -y
x* y
x.dot(y)
y/x
x = np.array(x,dtype=float)
x
y = np.array(y,dtype=float)
y
x/y
np.linspace(1,10)
np.linspace(1,10,num=10)
np.linspace(1,10,num=20)
np.linspace(1,10,num=19)
np.pi
x = np.linspace(0,2*np.pi,num=50)
x
y = np.sin(x)
y
