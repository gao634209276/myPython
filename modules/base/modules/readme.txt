Python模块
认识Python模块
什么是模块？
	模块是函数功能的扩展，模块是可以实现一项或多项功能的程序块。
	函数是一段程序，模块是一项程序块，也就是说函数和模块都是用来实现功能的，
	但是模块的范围比函数要广，在模块里面，可以重用多个函数。
如何导入模块
	Python中在一个程序中要使用某个模块，不能直接使用模块里面的功能。
	在使用模块之前，必须先导入指定模块，只要导入了一个模块，才能使用一个模块。
sys模块
	在Python中有一些模块是不用我们自己去定义，Python官方提供的自带的模块，
	这些模块伴随的Python的安装而产生，我们把这些模块叫做标准库模块。
	标准库模块是一类模块，而不是特指某一种模块。
	标准库模块中，也有非常多的模块，有的模块与电子邮件有关，有的模块与操作系统相关，还有的模块与系统功能有关，等等。
	我们把在标准库中与系统功能有关的这些模块称之为sys模块。


字节编译
什么是Python的.pyc文件
	首先，我们所说的.pyc文件是指以.pyc为后缀名的这一类文件。
	我们知道，由于我们计算机只认识二进制的机器语言，所以在执行Python模块的时候，有两种执行方式：
		一种是先将模块里面的内容编译成二进制语言，然后执行这些二进制语言，
		另一种是直接执行对应模块的二进制语言程序。
		第二种方式省略了编译这一步，所以执行速度相对来说要快一些。
	而把模块编译成二进制语言程序的这个过程叫做字节编译，这个过程会产生一个与编译的模块对应的.pyc文件。
	.pyc文件就是经过编译后的模块对应的二进制文件。
字节编译与编译的区别
	Python是一种解释型语言，而不是一种编译型语言，那么为什么现在又说Python中有字节编译呢？
	Python中虽然出现了编译这个过程，但是Python中编译的过程是在Python的解释器中发生的。
	换句话来说，其实每种程序要想让计算机执行，都只能变成二进制的形式，
	编译型语言是指在软件中就有一个独立的编译模块去将程序编译，
	而Python中字节编译这部分功能是由解释器完成的，所以Python仍然是解释型语言。
.pyc文件的产生
	.pyc文件就是经过编译后的模块对应的二进制文件
		import zipfile   # 直接执行该模块,会自动生成pyc文件
		第二种方式:在python shell中输入:
		python -m compileall xmllib.yp
		然后就可以编译成功,形成.pyc文件
.pyc文件的使用
	.pyc文件最大的一个作用就是加快了模块的运行速度。那们.pyc文件具体来说有什么用呢？
	如果我们深入学习下去，我们就会知道.pyc文件今后还可以做反编译等等高级功能。
	下面我们通过实例来看一下.pyc文件的内容。
	二进制文件阅读器这里提供如下:
		Binary Viewer
		apt-get install libdata-hexdumper-perl
		hexdump your_binary_file
		也可以直接使用hd命令来代替hexdump
		如果想要慢慢看 ： hd your_binary_file | more

from…import详解
学会使用from…import
	import只是导入了这个模块，而并没有导入我们模块的某个属性或方法。
	不仅导入一个模块，还有导入模块中对应的一个功能，我们可以使用from…import语句。
学会使用from…import*
	使用from…import语句只能一次导入一个模块的一个功能，我们如果要想一次性把这个模块的所有功能，
	也就是所有属性与方法都导入的话，我们可以使用from…import*语句。

-------------------------------------------------------
认识__name__属性
	Python函数中，如果一个函数调用其他函数完成一项功能，我们称这个函数为主函数，
	如果一个函数没有调用其他函数，我们这种函数叫做非主函数。
	模块也类型，如果一个模块是被直接使用的，而没有被别人调用，我们称这个模块为主模块，
	如果一个模块被别人调用，我们这种模块叫做非主模块。

	在Python中有主模块与非主模块之分，那么如何区分主模块与非主模块呢？
	如果一个模块的__name__属性的值是__main__，那么就说明这个模块是主模块，反之亦然。
	其实我们可以把__name__看作一个变量，这个变量是系统给出的，这个变量的功能是判断一个模块是否是主模块。

自定义模块
	Python中模块有非常多，有的模块是不需要用户自己去定义的去编写的，
	Python在安装的时候就自带的模块，这些模块是系统自带模块。
	而有一些模块刚好跟这种模块不同，他是需要我们自己去定义，自己去编写的模块，
	这些模块我们把其称之为自定义模块。
	将python编写的程序保存在lib目录下即可

dir()函数
认识dir()函数
	Python中有非常多的模块，但是有的时候我们会忘记一个模块有哪些功能。
	这个时候，我们可以用dir()函数来查看一下指定模块的功能列表。下面我们通过实例来讲解一下。
dir()函数扩展详解
	Python中dir()函数不仅仅能查看模块的功能列表，还能查看任意指定对象的功能列表，下面我们通过实例来讲解一下。
	Python中dir()函数不仅仅能查看模块的功能列表，还能查看任意指定对象的功能列表，下面我们通过实例来讲解一下。




















