Python标准库与其他应用
标准库
	所谓的标准库，就是指在我们Python安装的系统，系统就自带安装的库。
	那么这些库中有大量的系统自带模块，假如我们对标准库熟悉的话，那么将会大大方便我们的编程。
	关于系统自带模块的详细实操我们后面会有一个体系的课程，
	在初级课程中，我们主要给大家讲解两个系统自带模块，就够用了：
	第一个是sys模块，第二个是os模块。
	其他的标准库模块我们后续会专门实操讲解。
	那么，在这里，我们需要知道，标准库是Python安装的时候，系统自动安装的，里面拥有大量系统自带的功能强大的模块。
	下面我们可以通过实例看一下标准库的位置。
	sys模块主要处理系统相关的功能。那么下面我们通过实例讲解一下。
sys模块主要处理系统相关的功能。那么下面我们通过实例讲解一下。
os模块主要处理操作系统相关的功能，那么下面，我们同样通过操作系统来讲解一下。


特殊方法
	所谓的特殊方法，是指在面向对象编程的类中，具有特殊意义的方法。
	这些特殊意义是Python中规定的，比如__init__()表示初始化等等。
	Python的特殊方法非常地多，但是常见的特殊方法不多。
	常见的特殊方法主要有__init__、__len__、__str__、__lt__、__getitem__、__del__等，
	下面我们通过实例分别进行讲解。
如何在函数中接收元组和列表
	我们之前学过，函数中是可以有参数的，定义了函数的参数就代表哪些值可以传到函数里面去执行，我们之前给大家看的函数的参数，基本上都是变量的形式，
	也就是说，将某个变量传到函数里面去执行。
	但是我们想一想，函数的参数除了变量的形式还可以有其他形式吗？
	有的，我们还可以把元组或者列表或者字典作为函数的参数，那么这个时候，函数接收的参数类型就可能是列表或者元组或者字典了，
	就涉及到函数如何接收这几类数据的问题。
	在Python，要用函数接收列表或元组或字典，我们可以采用在这几种类型的参数前面加上*或**即可解决。
Exec与Eval语句
Exec语句
	假如我们一串字符串里面有Python代码，这个时候，普通情况是会把这串代码作为字符串来输出的，而不会执行这段代码。
	如果此时，我们想执行这串字符串里面的Python代码，使用Exec语句即可解决。
Eval语句
	假如我们一串字符串里面有Python的表达式，这个时候，普通情况是会把这串表达式作为字符串来输出的，而不会执行这个表达式。
	如果此时，我们想执行这串字符串里面的Python表达式，使用Eval语句即可解决。
Exec语句与Eval语句的区别
	Exec与Eval语句的主要区别是，Exec处理字符串里面的代码，而Eval是处理字符串里面的表达式。


----------------------------------------------
Lambda语句
Lambda语句主要是被用来创建一个新函数对象，并且将值返回给他们。
Assert语句与Repr函数
	有的时候，我们确信某个表达式的值为真，那么此时我们想要检验一下，我们可以使用Assert语句对这个表达式进行声明。
	假如为真，正确执行，假如为假，则引发AssertionError这个错误。
	如果我们想让任意一个值转换为一个字符串，我们可以直接将这个值传入Repr函数，那么Repr函数就会将这个值转换为字符串，然后返回。
GUI
	所谓的GUI，指的是图形用户界面的意思，即可以通过图形界面来进行编程（我们之前学的都是用代码编程），并且编写出来的程序可以出现图形化界面。
	要想实现Python的GUI编程，可以通过wxPython、Tkinter、PyGTK、PyQt、PySide等方式实现。
	那么我们在进阶篇内容中首先会给大家讲解wxPython的GUI编程，并且最终通过wxPython实现一个Python的GUI项目。
